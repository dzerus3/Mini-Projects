- hosts: localhost
  vars:
    rpmfusion_link: "https://download1.rpmfusion.org"
    fedora_version: "33"
    username: "sal"
  become: true

  tasks:
  - debug:
      msg:
      - "Using distribution: {{ ansible_distribution }}"
  
  - name: Enable RPMFusion
    dnf:
      name:
        - "{{ rpmfusion_link }}/free/fedora/rpmfusion-free-release-{{ fedora_version }}.noarch.rpm"
        - "{{ rpmfusion_link }}/nonfree/fedora/rpmfusion-nonfree-release-{{ fedora_version }}.noarch.rpm"
      state: present
    when: ansible_distribution == "Fedora"
    when: '"Fedora" in ansible_distribution'
  
  - name: Update Fedora
    dnf:
      name: "*"
      state: latest
    when: '"Fedora" in ansible_distribution'

  - name: Update Debian
    apt:
      update_cache: yes
      cache_valid_time: 7200
      name: "*"
      state: latest
    when: '"Debian" in ansible_distribution or "Kali" in ansible_distribution'

  - name: Install packages
    package:
      name:
        - ssh
        - vim
        - git
        - zsh
        - gcc
        - g++
        - tor
        - fzf
        - vlc
        - curl
        - ncat
        - tree
        - htop
        - gimp
        - gedit
        - python3
        - ipython3
        - nautilus
        - shotwell
        - bleachbit
        - mitmproxy
        - keepassxc
        - terminator
        - file-roller
        - firefox-esr
        - python3-pip
        - gnome-calculator
        - papirus-icon-theme
      state: latest
      
  - name: Enable SSH daemon in systemd
    systemd:
      name: sshd
      enabled: yes

  - name: Set zsh as default shell
    shell: "chsh --shell /usr/bin/zsh {{ username }}"

  - name: Download oh-my-zsh
    get_url:
      url: "https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh"
      dest: "./oh-my-zsh-install.sh"
      mode: 777
    become: true
    become_user: "{{ username }}"

  - name: Install oh-my-zsh
    shell: "./oh-my-zsh-install.sh >> ./oh-my-zsh.log"
    become: true
    become_user: "{{ username }}"

  - name: Download vimrc
    get_url:
      url: https://raw.githubusercontent.com/dzerus3/vimrc/master/.vimrc
      dest: "/home/{{ username }}/.vimrc"

  - name: Copy zshrc to home dir
    copy: 
      src:  "./.zshrc"
      dest: "~/.zshrc"
    become: true
    become_user: "{{ username }}"
  
  - name: Copy vimrc to home dir
    copy: 
      src:  "./.vimrc"
      dest: "~/.vimrc"
    become: true
    become_user: "{{ username }}"

  - name: Download wallpaper
    get_url: 
      url: "https://www.desktopbackground.org/download/1920x1080/2010/04/10/29_ultra-hd-4k-rain-wallpapers-hd-desktop-backgrounds-3840x2400_3840x2400_h.jpg"
      dest: "~/Pictures/wallpaper.jpg"
    become: true
    become_user: "{{ username }}"

  - name: Set XFCE to use wallpaper
    xfconf:
      channel: xfce4-desktop
      property: "/backdrop/screen0/monitor0/image-path"
      value_type: string
      value: "~/Pictures/wallpaper.jpg"
    become: true
    become_user: "{{ username }}"

  - name: Create a .themes folder
    file: 
      path: "~/.themes" 
      state: directory
    become: true
    become_user: "{{ username }}"

  - name: Download xfwm theme
    git:
      repo: "https://github.com/fakedeltatime/flat-two-color.git"
      dest: "~/.themes/flat-two-color"
      clone: yes
    become: true
    become_user: "{{ username }}"

  - name: Set xfwm theme
    xfconf:
      channel: xfwm4
      property: "/general/theme"
      value_type: string
      value: "flat-two-color"
    become: true
    become_user: "{{ username }}"
  
  - name: Set icon theme
    xfconf:
      channel: xsettings
      property: "/Net/IconThemeName"
      value_type: string
      value: "ePapirus"
    become: true
    become_user: "{{ username }}"

  - name: Set theme to Adwaita Dark
    xfconf:
      channel: xsettings
      property: "/Net/ThemeName"
      value_type: string
      value: "Adwaita-dark"
    become: true
    become_user: "{{ username }}"

  - name: Download pathogen
    shell: "mkdir -p ~/.vim/autoload ~/.vim/bundle && curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim"

    # You can use shell to run other executables to perform actions inline
  - name: Download vim plugins
    shell: |
      cd ~/.vim/bundle
      git clone https://github.com/dense-analysis/ale.git
      git clone https://github.com/ctrlpvim/ctrlp.vim.git
      git clone https://github.com/majutsushi/tagbar.git
      git clone https://github.com/Townk/vim-autoclose.git
      git clone https://github.com/tpope/vim-commentary.git
      git clone https://github.com/tpope/vim-dispatch.git
      git clone https://github.com/tpope/vim-fugitive.git
      git clone git://github.com/nathanaelkane/vim-indent-guides.git
      git clone https://github.com/tpope/vim-surround.git
      git clone https://github.com/ervandew/supertab.git
